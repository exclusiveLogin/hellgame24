const Telegraf = require('telegraf');
const HttpsProxyAgent = require('https-proxy-agent');
const fe = require('./fetcher');
const sun = require('./sunlocator');
const fetch = require('node-fetch');
const moment = require('moment');



let token = '776154170:AAELvoF6Tro_C2PMpSfAYit3j0VrZO1-47A';
// HG —á–∞—Ç
let hgChatId = -395832167;
// SS –ª–∏—á–∫–∞
//let hgChatId = 474062218;
let version = '0.1.1';
const bot = new Telegraf(token, {
    telegram: {
        agent: new HttpsProxyAgent({port: '3128', host: '178.128.174.206'})
    }
});

bot.command('echo', (ctx)=>ctx.reply(ctx.message.text));

bot.hears('check', (ctx, next)=>{
    console.log('check fe:', fetcher);
    ctx.reply('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ version: ' + version + ' –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å –≤ event log id: ' + fetcher.lastId + ' –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–ø—Ä–æ—Å–∞ HG24: ' + fetcher.interval + 'ms');
    next();
});

bot.hears('sun', (ctx, next)=>{
    //console.log('sun fe:', sunLocator);

    setTimeout(() => ctx.reply('–ù–æ—á—å: ' + sunLocator.nightTime.format('DD:MM:YYYY HH:mm:ss') + ' –î–µ–Ω—å: ' + sunLocator.dayTime.format('DD:MM:YYYY HH:mm:ss')), 1500);
    setTimeout(() => ctx.reply('–£—Ç—Ä–æ -  —Å–∏–Ω–∏–π —á–∞—Å: ' + sunLocator.blueHourMTime.format('DD:MM:YYYY HH:mm:ss') + ' –∑–æ–ª–æ—Ç–æ–π —á–∞—Å: ' + sunLocator.goldHourMTime.format('DD:MM:YYYY HH:mm:ss')), 500);
    setTimeout(() => ctx.reply('–í–µ—á–µ—Ä - –∑–æ–ª–æ—Ç–æ–π —á–∞—Å: ' + sunLocator.goldHourETime.format('DD:MM:YYYY HH:mm:ss') + ' —Å–∏–Ω–∏–π —á–∞—Å: ' + sunLocator.blueHourETime.format('DD:MM:YYYY HH:mm:ss')), 2500);

    ctx.reply('–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è: ' + sunLocator.interval + 'ms. –°–æ—Å—Ç–æ—è–Ω–∏–µ: ' + sunLocator.currentState + ' ( ' + sunLocator.currentStateTitle + ' ) - ' + sunLocator.currentStateDescription);
    
    setTimeout(() => ctx.reply('–°–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞: ' + moment().format('DD:MM:YYYY HH:mm:ss') ), 3000);
    next();
});

bot.start((ctx) => ctx.reply('Hello'));

bot.on('message', (ctx) => {
    console.log('message...:', ctx.update.message.text );
    console.log(ctx.update.message.chat);
    console.log(ctx.update.message.from);
});

if(hgChatId) bot.telegram.sendMessage(hgChatId, '–°–µ—Ä–≤–∏—Å –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');

bot.launch();


process.on('SIGINT', ()=>{
    bot.telegram.sendMessage(hgChatId, '–°–µ—Ä–≤–∏—Å –±–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω').finally(()=>process.exit());
});

// –∑–∞–ø—É—Å–∫–∞–µ–º fetcher —Å–æ–±—ã—Ç–∏–π –Ω–∞ hg24
let fetcher = new fe('http://hellgame24.ru');
fetcher.getStream().subscribe( events => {
    if( events && events.length ) events.forEach((ev, idx) => {
        setTimeout(()=>{
            let msg = `–°–æ–±—ã—Ç–∏–µ ${ ev.level === 'info' ? '‚ÑπÔ∏è' : ''}${ ev.level === 'warning' ? '‚ö†Ô∏è' : ''}${ ev.level === 'danger' ? '‚ÄºÔ∏è' : ''} <b>( ${ev.level} )</b>
<strong>${ev.title}</strong>
${ev.description}`;
            
            //console.log('msg:', msg);
            bot.telegram.sendMessage(hgChatId, msg, 
            {parse_mode:"HTML"});
        }, 2000 * idx);
    });
});

let sunLocator = new sun();
sunLocator.start();
sunLocator.getStream().subscribe( sunState => {
    
    if( sunState ){
        setTimeout(() => { 
            let msg = `–í—Ä–µ–º—è –Ω–∞—Å—Ç—É–ø–∏–ª–æ ${ sunState.state === 'day' ? '‚òÄÔ∏è' : ''}${ sunState.state === 'night' ? 'üåô' : ''}${ '‚ö†Ô∏è' } <b>( ${ sunState.state } )</b>
<strong>${sunState.title}</strong>
${sunState.description}`;
            
            //console.log('msg:', msg);
            bot.telegram.sendMessage(hgChatId, msg, 
            {parse_mode:"HTML"});
        }, 2000);

        const body_state = {
            mode:'add_state',
            login: 'system',
            global_code: sunState.state
        }

        const body_segment = {
            mode:'update',
            segment: 'global',
        }

        fetch('https://hellgame24.ru/backend/state/state_handler.php', {
            method: 'POST',
            body:    JSON.stringify(body_state),
            headers: { 'Content-Type': 'application/json' },
        }).then(r => r.text()).then(json=>console.log('result: ', json)).catch(err => console.error(err));

        fetch('https://hellgame24.ru/backend/segment/segment_state.php', {
            method: 'POST',
            body:    JSON.stringify(body_segment),
            headers: { 'Content-Type': 'application/json' },
        }).then(r => r.text()).then(json=>console.log('result: ', json)).catch(err => console.error(err))
    }
    console.log('SUN State: ', sunState);
});